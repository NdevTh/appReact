{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React, { memo, useState } from 'react';\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { emailValidator, passwordValidator } from \"../core/utils\";\nimport Header from \"../Components/Header\";\nimport { theme } from \"../core/theme\";\nimport * as SQLite from 'expo-sqlite';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ForgotPasswordScreen = function (_React$Component) {\n  _inherits(ForgotPasswordScreen, _React$Component);\n  var _super = _createSuper(ForgotPasswordScreen);\n  function ForgotPasswordScreen(props) {\n    var _this;\n    _classCallCheck(this, ForgotPasswordScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      email: \"\",\n      newpassword: \"\"\n    };\n    return _this;\n  }\n  _createClass(ForgotPasswordScreen, [{\n    key: \"alert\",\n    value: function alert() {\n      Alert.alert('Erreur', 'Email ou mot de passe incorrect', [{\n        text: 'OK',\n        onPress: function onPress() {\n          return console.log('OK Pressed');\n        }\n      }], {\n        cancelable: false\n      });\n    }\n  }, {\n    key: \"onSendPressed\",\n    value: function onSendPressed() {\n      var _this2 = this;\n      var emailError = emailValidator(this.state.email);\n      var newpasswordError = passwordValidator(this.state.newpassword);\n      if (emailError || newpasswordError) {\n        alert();\n        return;\n      } else {\n        var db = SQLite.openDatabase(\"database.db\");\n        db.transaction(function (tx) {\n          tx.executeSql(\"update user set mdp = ? where mail = ?\", [_this2.state.newpassword, _this2.state.email]);\n        });\n        this.props.navigation.navigate('Loginscreen');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var navigate = this.props.navigation.navigate;\n      return _jsxs(View, {\n        children: [_jsx(Header, {\n          children: \"Reinitialiser son mot de passe\"\n        }), _jsx(TextInput, {\n          label: \"E-mail address\",\n          returnKeyType: \"next\",\n          value: this.state.email,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              email: text\n            });\n          },\n          style: {\n            height: 40,\n            borderColor: 'gray',\n            borderWidth: 1,\n            margin: 10\n          },\n          autoCompleteType: \"email\",\n          textContentType: \"emailAddress\",\n          keyboardType: \"email-address\"\n        }), _jsx(View, {\n          class: styles.view\n        }), _jsx(TextInput, {\n          label: \"New password\",\n          returnKeyType: \"done\",\n          value: this.state.newpassword,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              newpassword: text\n            });\n          },\n          style: {\n            height: 40,\n            borderColor: 'gray',\n            borderWidth: 1,\n            margin: 10\n          }\n        }), _jsx(View, {\n          class: styles.view\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return _this3.onSendPressed();\n          },\n          style: styles.button,\n          title: \"Valider\"\n        })]\n      });\n    }\n  }]);\n  return ForgotPasswordScreen;\n}(React.Component);\nexport { ForgotPasswordScreen as default };\nvar styles = StyleSheet.create({\n  back: {\n    width: '100%',\n    marginTop: 12\n  },\n  button: {\n    marginTop: 12\n  },\n  label: {\n    color: theme.colors.secondary,\n    width: '100%'\n  },\n  input: {\n    backgroundColor: \"#ffffff\"\n  },\n  view: {\n    height: 40\n  }\n});","map":{"version":3,"names":["React","memo","useState","Text","StyleSheet","TouchableOpacity","Alert","TextInput","Button","View","emailValidator","passwordValidator","Header","theme","SQLite","jsx","_jsx","jsxs","_jsxs","ForgotPasswordScreen","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","email","newpassword","_createClass","key","value","alert","text","onPress","console","log","cancelable","onSendPressed","_this2","emailError","newpasswordError","db","openDatabase","transaction","tx","executeSql","navigation","navigate","render","_this3","children","label","returnKeyType","onChangeText","setState","style","height","borderColor","borderWidth","margin","autoCompleteType","textContentType","keyboardType","class","styles","view","button","title","Component","default","create","back","width","marginTop","color","colors","secondary","input","backgroundColor"],"sources":["/Users/cthuynh/Documents/Documents - MacBook Pro de Ct/Mai/AppMobileRendu/projetMobile/StockManagement/appReact/gestion-stock/screens/ForgotPasswordScreen.js"],"sourcesContent":["import React, { memo, useState } from 'react';\r\nimport {Text, StyleSheet, TouchableOpacity, Alert, TextInput, Button, View} from 'react-native';\r\nimport {emailValidator, passwordValidator} from '../core/utils';\r\nimport Header from '../Components/Header';\r\nimport { theme } from '../core/theme';\r\nimport * as SQLite from 'expo-sqlite'\r\n\r\nexport default class ForgotPasswordScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: \"\",\r\n            newpassword: \"\"\r\n        };\r\n    }\r\n    alert(){\r\n        Alert.alert(\r\n            'Erreur',\r\n            'Email ou mot de passe incorrect',\r\n            [\r\n                {text: 'OK', onPress: () => console.log('OK Pressed')},\r\n            ],\r\n            {cancelable: false},\r\n        );\r\n    }\r\n    onSendPressed (){\r\n        const emailError = emailValidator(this.state.email);\r\n        const newpasswordError = passwordValidator(this.state.newpassword)\r\n\r\n        if (emailError || newpasswordError) {\r\n            alert()\r\n            return;\r\n        }else{\r\n            const db = SQLite.openDatabase(\"database.db\");\r\n            db.transaction(\r\n                tx => {\r\n                    tx.executeSql(\"update user set mdp = ? where mail = ?\", [this.state.newpassword, this.state.email]);\r\n                }\r\n            );\r\n            this.props.navigation.navigate('Loginscreen');\r\n        }\r\n    };\r\n    render(){\r\n        const {navigate} = this.props.navigation;\r\n        return (\r\n            <View>\r\n                <Header>Reinitialiser son mot de passe</Header>\r\n\r\n                <TextInput\r\n                    label=\"E-mail address\"\r\n                    returnKeyType=\"next\"\r\n                    value={this.state.email}\r\n                    onChangeText={text => this.setState({ email: text })}\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1, margin: 10 }}\r\n                    autoCompleteType=\"email\"\r\n                    textContentType=\"emailAddress\"\r\n                    keyboardType=\"email-address\"\r\n                />\r\n                <View class={styles.view}></View>\r\n\r\n                <TextInput\r\n                    label=\"New password\"\r\n                    returnKeyType=\"done\"\r\n                    value={this.state.newpassword}\r\n                    onChangeText={text => this.setState({ newpassword: text })}\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1, margin: 10 }}\r\n                />\r\n                <View class={styles.view}></View>\r\n\r\n                <Button onPress={() => this.onSendPressed()} style={styles.button} title=\"Valider\"/>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    back: {\r\n        width: '100%',\r\n        marginTop: 12,\r\n    },\r\n    button: {\r\n        marginTop: 12,\r\n    },\r\n    label: {\r\n        color: theme.colors.secondary,\r\n        width: '100%',\r\n    },\r\n    input: {\r\n        backgroundColor: \"#ffffff\",\r\n    },\r\n    view: {\r\n        height: 40\r\n    }\r\n});\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}