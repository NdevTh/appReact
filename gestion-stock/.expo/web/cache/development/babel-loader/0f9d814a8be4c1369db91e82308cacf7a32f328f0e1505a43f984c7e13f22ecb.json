{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Header from \"../Components/Header\";\nimport { emailValidator, passwordValidator, nameValidator } from \"../core/utils\";\nimport * as SQLite from 'expo-sqlite';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar RegisterScreen = function (_React$Component) {\n  _inherits(RegisterScreen, _React$Component);\n  var _super = _createSuper(RegisterScreen);\n  function RegisterScreen(props) {\n    var _this;\n    _classCallCheck(this, RegisterScreen);\n    _this = _super.call(this, props);\n    _this.state = {\n      name: \"\",\n      email: \"\",\n      password: \"\"\n    };\n    return _this;\n  }\n  _createClass(RegisterScreen, [{\n    key: \"alerte\",\n    value: function alerte() {\n      Alert.alert('Erreur', 'Veuillez remplir correctement les champs', [{\n        text: 'OK',\n        onPress: function onPress() {\n          return console.log('OK Pressed');\n        }\n      }], {\n        cancelable: false\n      });\n    }\n  }, {\n    key: \"onSignUpPressed\",\n    value: function onSignUpPressed() {\n      var _this2 = this;\n      console.log(\"click\");\n      console.log(\"name\");\n      console.log(\"password\");\n      console.log(this.props);\n      var nameError = nameValidator(this.state.name);\n      var emailError = emailValidator(this.state.email);\n      var passwordError = passwordValidator(this.state.password);\n      if (emailError || passwordError || nameError) {\n        this.alerte();\n        return;\n      } else {\n        var db = SQLite.openDatabase(\"database.db\");\n        db.transaction(function (tx) {\n          tx.executeSql(\"insert into user (name, mail, mdp) values (?, ?, ?)\", [_this2.state.name, _this2.state.email, _this2.state.password]);\n          console.log('lol');\n        });\n        this.props.navigation.navigate('Loginscreen');\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n      var navigate = this.props.navigation.navigate;\n      return _jsxs(View, {\n        children: [_jsx(Header, {\n          title: \"Inscription\"\n        }), _jsx(TextInput, {\n          placeholder: \"Nom\",\n          label: \"Nom\",\n          style: {\n            height: 40,\n            borderColor: 'gray',\n            borderWidth: 1,\n            margin: 10\n          },\n          returnKeyType: \"next\",\n          value: this.state.name,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              name: text\n            });\n          }\n        }), _jsx(View, {\n          class: styles.view\n        }), _jsx(TextInput, {\n          placeholder: \"E-mail\",\n          label: \"E-mail\",\n          style: {\n            height: 40,\n            borderColor: 'gray',\n            borderWidth: 1,\n            margin: 10\n          },\n          returnKeyType: \"next\",\n          value: this.state.email,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              email: text\n            });\n          },\n          autoCapitalize: \"none\",\n          autoCompleteType: \"email\",\n          textContentType: \"emailAddress\",\n          keyboardType: \"email-address\"\n        }), _jsx(View, {\n          class: styles.view\n        }), _jsx(TextInput, {\n          placeholder: \"Mot de passe\",\n          label: \"Mot de passe\",\n          style: {\n            height: 40,\n            borderColor: 'gray',\n            borderWidth: 1,\n            margin: 10\n          },\n          returnKeyType: \"done\",\n          value: this.state.password,\n          onChangeText: function onChangeText(text) {\n            return _this3.setState({\n              password: text\n            });\n          },\n          secureTextEntry: true\n        }), _jsx(View, {\n          class: styles.view\n        }), _jsx(Button, {\n          onPress: function onPress() {\n            return _this3.onSignUpPressed();\n          },\n          title: \"Inscription\",\n          style: styles.button\n        }), _jsxs(View, {\n          style: styles.row,\n          children: [_jsx(Text, {\n            style: styles.label,\n            children: \"D\\xE9ja inscrit ? \"\n          }), _jsx(TouchableOpacity, {\n            onPress: function onPress() {\n              return navigate('Loginscreen');\n            },\n            children: _jsx(Text, {\n              style: styles.link,\n              children: \"Connectez-vous\"\n            })\n          })]\n        })]\n      });\n    }\n  }]);\n  return RegisterScreen;\n}(React.Component);\n;\nvar styles = StyleSheet.create({\n  label: {\n    color: '#600EE6'\n  },\n  button: {\n    marginTop: 24\n  },\n  row: {\n    flexDirection: 'row',\n    marginTop: 4\n  },\n  link: {\n    fontWeight: 'bold',\n    color: '#600EE6'\n  },\n  input: {\n    backgroundColor: \"#ffffff\"\n  },\n  view: {\n    height: 40\n  }\n});\nexport default RegisterScreen;","map":{"version":3,"names":["React","View","Text","StyleSheet","TouchableOpacity","Alert","TextInput","Button","Header","emailValidator","passwordValidator","nameValidator","SQLite","jsx","_jsx","jsxs","_jsxs","RegisterScreen","_React$Component","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","name","email","password","_createClass","key","value","alerte","alert","text","onPress","console","log","cancelable","onSignUpPressed","_this2","nameError","emailError","passwordError","db","openDatabase","transaction","tx","executeSql","navigation","navigate","render","_this3","children","title","placeholder","label","style","height","borderColor","borderWidth","margin","returnKeyType","onChangeText","setState","class","styles","view","autoCapitalize","autoCompleteType","textContentType","keyboardType","secureTextEntry","button","row","link","Component","create","color","marginTop","flexDirection","fontWeight","input","backgroundColor"],"sources":["/Users/cthuynh/Documents/Documents - MacBook Pro de Ct/Mai/AppMobileRendu/projetMobile/StockManagement/appReact/gestion-stock/screens/RegisterScreen.js"],"sourcesContent":["import React from 'react';\r\nimport {View, Text, StyleSheet, TouchableOpacity, Alert, TextInput, Button} from 'react-native';\r\nimport Header from '../Components/Header';\r\nimport {\r\n    emailValidator,\r\n    passwordValidator,\r\n    nameValidator,\r\n} from '../core/utils';\r\nimport * as SQLite from 'expo-sqlite'\r\n\r\n\r\nclass RegisterScreen extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        //initialise les states\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n        };\r\n    }\r\n\r\n    alerte(){\r\n        Alert.alert(\r\n            'Erreur',\r\n            'Veuillez remplir correctement les champs',\r\n            [\r\n                {text: 'OK', onPress: () => console.log('OK Pressed')},\r\n            ],\r\n            {cancelable: false},\r\n        );\r\n    }\r\n\r\n    onSignUpPressed (){\r\n        console.log(\"click\");\r\n        // ajouter mon code\r\n        console.log(\"name\");\r\n        console.log(\"password\");\r\n        // fin ajouter mon code\r\n        console.log(this.props);\r\n        const nameError = nameValidator(this.state.name);\r\n        const emailError = emailValidator(this.state.email);\r\n        const passwordError = passwordValidator(this.state.password);\r\n        if (emailError || passwordError || nameError) {\r\n            this.alerte()\r\n            return;\r\n        } else {\r\n            const db = SQLite.openDatabase(\"database.db\");\r\n            db.transaction(\r\n                tx => {\r\n                    tx.executeSql(\"insert into user (name, mail, mdp) values (?, ?, ?)\", [this.state.name, this.state.email, this.state.password]);\r\n                    console.log('lol');\r\n                }\r\n            );\r\n            // console.log(this.props)\r\n            this.props.navigation.navigate('Loginscreen')\r\n        }\r\n    };\r\n    render() {\r\n        const {navigate} = this.props.navigation;\r\n        return (\r\n            <View>\r\n                <Header title=\"Inscription\"/>\r\n                <TextInput\r\n                    placeholder='Nom'\r\n                    label=\"Nom\"\r\n                    style={{ height: 40, borderColor: 'gray',  borderWidth: 1, margin: 10}}\r\n                    returnKeyType=\"next\"\r\n                    value={this.state.name}\r\n                    onChangeText={text => this.setState({ name: text })}\r\n                />\r\n                <View class={styles.view}></View>\r\n                <TextInput\r\n                    placeholder='E-mail'\r\n                    label=\"E-mail\"\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1, margin: 10 }}\r\n                    returnKeyType=\"next\"\r\n                    value={this.state.email}\r\n                    onChangeText={text => this.setState({ email: text })}\r\n                    autoCapitalize=\"none\"\r\n                    autoCompleteType=\"email\"\r\n                    textContentType=\"emailAddress\"\r\n                    keyboardType=\"email-address\"\r\n                />\r\n                <View class={styles.view}></View>\r\n\r\n                <TextInput\r\n                    placeholder='Mot de passe'\r\n                    label=\"Mot de passe\"\r\n                    style={{ height: 40, borderColor: 'gray', borderWidth: 1, margin: 10 }}\r\n                    returnKeyType=\"done\"\r\n                    value={this.state.password}\r\n                    onChangeText={text => this.setState({ password: text })}\r\n                    secureTextEntry\r\n                />\r\n                <View class={styles.view}></View>\r\n                <Button onPress={() => this.onSignUpPressed() } \r\n                title=\"Inscription\" style={styles.button}/>\r\n                <View style={styles.row}>\r\n                    <Text style={styles.label}>Déja inscrit ? </Text>\r\n                    <TouchableOpacity onPress={() => navigate('Loginscreen')}>\r\n                        <Text style={styles.link}>Connectez-vous</Text>\r\n                    </TouchableOpacity>\r\n                </View>\r\n            </View>\r\n        );\r\n    }\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    label: {\r\n        color: '#600EE6',\r\n    },\r\n    button: {\r\n        marginTop: 24,\r\n    },\r\n    row: {\r\n        flexDirection: 'row',\r\n        marginTop: 4,\r\n    },\r\n    link: {\r\n        fontWeight: 'bold',\r\n        color: '#600EE6',\r\n    },\r\n    input: {\r\n        backgroundColor: \"#ffffff\",\r\n    },\r\n    view: {\r\n        height: 40\r\n    }\r\n});\r\nexport default (RegisterScreen)\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}